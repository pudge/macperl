#!perl -w
# run this document through perl to check its syntax
use Pod::Checker;
podchecker(\*DATA);

__END__

=head1 NAME

macperldelta - what is new for MacPerl v5.6.1

=head1 DESCRIPTION

This document describes differences between the 5.2.0r4 release
and the 5.6.1r1 release.

This document covers changes specific to MacPerl.  For general changes
to perl, you might also want to read L<perl5005delta> for changes
between 5.004 and 5.005, and L<perldelta> for changes from 5.005
to present.

=head1 Highlights In MacPerl 5.6.1

=over 4

=item *

Update from 5.004 to 5.6.1 sources

=item *

Update to GUSI 2

=item *

New and improved Shuck

=item *

Many bugs fixed

=item *

More modules and utilities included

=back


=head1 Incompatible Changes

=head2 Shared Libraries Incompatible

This is mentioned elsewhere in the perl documentation but bears repeating
here: shared libraries made for use with perl 5.004 (and MacPerl 5.2.0r4)
are not supported under perl 5.6 (and MacPerl 5.6.1).

The MacPerl Module Porters page has been updated to note whether a
particular distribution is for 5.004 or 5.6.

	http://dev.macperl.org/mmp

B<Note>: With cpan-mac it was recommended that F<site_perl> be added
to the Libraries preferences, so that its modules would override the
ones that came with MacPerl.  If you keep your old F<site_perl>,
MacPerl will fail.  Either clean it out, or remove it from the
Libraries preferences.


=head2 cpan-mac Not Supported

All of cpan-mac is now included in MacPerl, with some incompatible changes
from the version available for MacPerl 5.2.0r4.  Continue to use cpan-mac
for old versions of MacPerl, but for MacPerl 5.6.1, use the included
modules and utilities.

The L<CPAN> module has also been changed; some of the Mac-specific functions
have changed, and have moved from L<ExtUtils::MM_MacOS> to L<Mac::BuildTools>.

=head2 Path Changes

All paths returned from functions end in a colon (C<:>).  Previously,
this behavior was inconsistent.  Code that assumes a path does not
end in a colon may break.

Also, in L<File::Spec>, C<catdir> and C<catfile> will now return a relative,
NOT absolute, path by default, as this is the expected behavior on other
platforms.  See L<File::Spec> for more information.

=head2 Glob Syntax Changed

The built-in C<glob> and glob operator C<E<lt>E<gt>> now use the standard
BSD syntax instead of the modified MPW syntax.  See the L<File::Glob>
module for more information.

=head2 AppleTalk, Choose, PPC Sockets Not Supported

Support for the GUSI Choose function and AppleTalk sockets were dropped
from GUSI 2, so are no longer supported.  PPC sockets are not currently
supported in MacPerl, but may be in the future.  (B<Note>:
Apple events code, such as via L<Mac::Glue>, can still send events
via PPC sockets, since that is handled by the OS, not MacPerl).

=head2 GD Not Included

The GD module is no longer included.  It has undergone a significant
change since it was last included, dropping GIF support, and we
didn't get around to porting the whole thing.

=head2 Various .pl and .ph Libraries Not Included

StandardFile.pl, CommConnect.pl, and GUSI.ph were deprecated, and
are not included.  For StandardFile.pl functions, use
L<Mac::StandardFile> instead.

=head2 CFM68K Not Supported

Support for CFM68K, which provided dynamic loading of shared libraries
under 68K, is no longer supported.

=head2 68K Modules

The 68K build of MacPerl does not include the various Mac:: toolbox
modules.  This may change in the future; please request the feature
if you need it.

=head2 Minimum Requirements

MacPerl 5.6 requires Mac OS 8.1 or above, either 68040 or PowerPC,
and 12MB RAM.  64MB or more RAM is recommended for using certain
modules and programs.

CarbonLib 1.0.4 or greater is also required.  Mac OS 8.1 also
requires the Navigation extension, included with CarbonLib 1.0.4.
All versions of CarbonLib may be downloaded from Apple for free.

 <URL:ftp://download.info.apple.com/Apple_Support_Area/Apple_Software_Updates/
  English-North_American/Macintosh/System/Other_System/>

 <URL:http://www.info.apple.com/support/downloads.html>

You may also wish to increase MacPerl's memory allocation to as much
as 30MB, 60MB, or more, depending on what you're using it for.

For using just the MPW tool, Mac OS 7.5.5 and 68030 should be sufficient,
though some of the Mac:: modules might not work.


=head1 Core Enhancements

=head2 Update from 5.004 to 5.6.1 sources

=over 4

=item *

MacPerl can now be built using entirely freely available
software (although, dynamic loading is broken in some such builds;
see L<"Known Problems">).

=item *

MacPerl is now using the latest (as of this writing) release of perl,
version 5.6.1, and all core changes required for MacPerl have been
folded into the main source repository, for both the 5.6 branch
and the main development trunk.  So when perl 5.8 is released,
it will already have support to build on Mac OS.

=item *

The versioning system of MacPerl has changed.  It used to be that
5.2.0r4 would mean MacPerl version 2.0 of perl revision 5, version 4
(i.e., 5.004).  Now, 5.6.1r1 means MacPerl build 1 of perl 5.6.1.

=item *

Many modules and tests previously not working properly under MacPerl
now do, including major updates to File::Find, Cwd, ExtUtils::Manifest,
File::Glob, and more.

=item *

MacPerl is built on sources that includes all of the fixes
and changes to 5.6 over the past year since 5.6.1 was released;
so MacPerl 5.6.1 is not exactly the same as perl 5.6.1.  In fact,
MacPerl 5.6.1 is actually I<the most advanced release of
perl ever>.  That doesn't mean as much as it sounds like it means,
but it's fun to say.

=back

See F<README.macos> in the perl source and L<http://dev.macperl.org/>
for more information about the sources.


=head2 Update to GUSI 2

Matthias Neeracher -- the author of MacPerl -- wrote a library
called GUSI, which provides sockets and POSIX support to MacPerl.
Previous versions of MacPerl used GUSI 1.  GUSI was completely
rewritten for version 2.  It is faster and provides some more
functions, like the previously missing C<socketpair> and C<pipe>.


=head2 New and improved Shuck

Thomas Wegner updated Shuck in various ways, including
conformance to perlpodspec,
parsing fixes,
more reliable memory handling,
better UI feedback,
updated look and feel,
improved search,
improved controls and configuration options.



=head1 Modules and Pragmata

=head2 Bundled Modules

The modules below are, in addition to the Mac:: modules and the
Perl standard library, included with the MacPerl distribution.
They are included either because they have been included with
perl 5.8.0 (so MacPerl 5.6 users can use them now, rather than
later) or because they are basic functionality needed for using
CPAN and installing other modules.

The modules are listed with their version number, and followed
by any bugs or behavior differences.

=over 4

=item Archive::Tar 0.22

=item Class::ISA 0.32

=item Compress::Zlib 1.16

=item Convert::BinHex 1.119

=item Digest 1.00

=item Digest::MD5 2.16

=item File::Sort 1.00

=item Filter::Simple 0.77

=item Filter::Util::Call 1.05

=item HTML::Parser 3.25

=item HTML::Tagset 3.03

=item libnet 1.0901

=item List::Util 1.05

=item LWP 5.63

=item Mac::Conversions 1.04

=item Mac::FileSpec::Unixish 1.11

=item MailTools 1.42

=item MD5 2.02

=item Memoize 0.66

=item MIME::Base64 2.12

=item MLDBM 2.00

=item Net::Telnet 3.02

=item NEXT 0.50

=item Storable 1.014

=item Switch 2.06

=item Text::Balanced 1.89

=item Time::HiRes 1.20

=item URI 1.18

file:foo.txt != file:./foo.txt in heuristics.t.

Escape test encodes [ and ] in old-base.t, rfc2732.t.

=back


=head2 New Modules and Pragmata

=over 4

=item *

L<Mac::err> allows selectable formatting of error output.  Default
is the traditional MPW style from previous versions of MacPerl, but the
standard perl style is available via this module.

=item *

L<Mac::BuildTools> contains functions for building modules etc.

=item *

L<Mac::Navigation> provides access to Navigation Services (in lieu
of L<Mac::StandardFile>).

=item *

L<Mac::Notification> provides access to the Notification Manager.

=item *

L<Mac::Apps::Launch> launches and quits applications.

=item *

L<Mac::OSA::Simple> provides simple access to L<Mac::OSA> functionality.

=item *

L<Mac::AppleEvents::Simple> provides simple access to L<Mac::AppleEvents>
functionality.

=item *

L<Mac::Glue> is a framework for controlling Mac apps, via Apple events,
with an AppleScript vocabulary.

=back


=head2 Updated And Improved Modules and Pragmata

=over 4

=item *

Many of the Mac:: modules have minor bugfixes.

=item *

The L<MacPerl> module has been cleaned up to export symbols
more intelligently.

=item *

The C<$MacPerl::Compiler> variable has been added to L<MacPerl>,
containing the name of the compiler used to build this version
of MacPerl.

=item *

C<MacPerl::DoAppleScript> now returns error text in C<$@>.

=back


=head1 Utility Additions

=over 4

=item *

F<p2as> is perl-to-AppleScript, a droplet using L<Mac::OSA::Simple>
to create compiled AppleScripts from MacPerl scripts.  The compiled
script calls the MacPerl application, passing either the text of the
script, or an alias to the script on disk, to the MacPerl application.

=item *

Various utilties for L<Mac::Glue> are included.  F<gluedialect> will
create a glue file for the system's dialect (it used to be separate,
now it is included in the AppleScript extension).  F<gluescriptadds>
will similarly create glue files for scripting additions.  These two
utilities can be run by themselves, and must be run before Mac::Glue
may be used.

F<gluemac> is a droplet for creating glue files for given applications.
Drop each application to be glued onto the droplet, including the
Finder itself.

F<glueedit> allows you to edit an existing glue, for cases when the
aete resource of an application is lying.

=item *

Various utilities for modules are included.  F<installme> is a droplet
for installing a distribution; drop either a distribution archive or
an unpacked folder onto the droplet.  F<untarzipme> will merely unpack
the distribution archive.  F<tarzipme> will create a distribution archive.

=back


=head1 Selected Bug Fixes

=over 4

=item *

Problems with DB_File and large block sizes should be gone.

=item *

C<require> is more liberal in what kind of Unix-style
paths it accepts.

=item *

Various fixes were made for the module processing/installation
routines.

=item *

%ENV contents are tainted.

=item *

Problems with editing of scripts via external editor (e.g., BBEdit)
have been fixed.

=item *

malloc() is smarter.

=item *

Config.pm (and the -V command-line switch) will now give better
information for a given system.


=item *

C<kill> now accepts a signal of 0, so the common idiom of using
C<kill 0, $var> to test for taintedness works.

=item *

C<caller>, and some other functions, now returns the actual filename
or window name instead of "Dev:Pseudo" in some cases.

=back


=head1 Known Problems

=over 4

=item *

C<system> doesn't return a good value.

=item *

The version of sfio we use has problems with the C<%g> and C<%f>
C<sprintf> formats.  C<"%.0f", 0.6> should give C<1>, but gives C<0>.
C<%g> should pad with zeroes, but pads with spaces.

=item *

C<sysread> should warn when passed a filehandle opened for read-only,
but does not.

=item *

C<%ENV> is not as magical as, or more magical than, you might want it to be.
Among other problems, C<%ENV = ()> does not clear out C<%ENV>, and the environment
does not carry over to C<system> calls.

=item *

As noted in L<"Incompatible Changes">, there is no support for the Mac::
toolbox modules in the 68K builds.  This may change.

=item *

As noted in L<"Incompatible Changes">, there is no support for PPC sockets
in the Socket module.  This may change.

=item *

Currently, the MPW perl binary created with the MrC compiler will crash
MPW after it loads shared libraries.  However, shared libraries built with
MrC can be used with the standard binaries, or by other binaries created
with the MWCPPC compiler, with no ill effects.

=back


=head1 Reporting Bugs

If you find what you think is a bug, you might check the
macperl@perl.org mailing list (http://lists.perl.org/)
and the MacPerl bug database (http://dev.macperl.org/).

If you believe you have an unreported bug in MacPerl, please
go to the MacPerl bug database.  Be sure to trim your bug down
to a tiny but sufficient test case.  If running the MPW tool,
include the output of C<perl -V>.  If running the application,
run the "One Liner" MacPerl script, and execute the text
C<perl -V>.


=head1 SEE ALSO

The F<Changes> file for exhaustive details on what changed.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.


=head1 HISTORY

Written by Chris Nandor E<lt>pudge@pobox.comE<gt>.

Last modified 2002.03.07.

=cut

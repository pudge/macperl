:Perl -Sx "{0}" {"Parameters"} || Open Config.MPW_Perl; Exit
#!perl
#
# Install.MPW_Perl	-	A new approach to installing the MPW Perl Tool, as proposed
#						by Martin Heller & implemented by Matthias Neeracher.
#
# To install the MPW Perl tool:
# 	- Install the MacPerl application package
#	- Install the MacPerl MPW tool package onto the same disk
#	- Start MPW
#	- Change the directory to the “MacPerl ƒ:MPW:” folder using the directory command
#	  or the “Set Directory…” menu item.
# 	- Execute the “Install.MPW_Perl” command. This will create a configuration 
#	  file and open it.
#	- Edit the configuration file if there is anything you'd like to change.
#	- Execute “Install.MPW_Perl“ again.
#	- Execute the commands written to the worksheet window.
# 	- Should you for any reason wish to uninstall MPW Perl, run “Uninstall.MPW_Perl”
# 	

###################### NO USER CONFIGURABLE PARTS BELOW #########################

print "######################### MPW Perl Installer ########################\n\n";

$usp1 = "$ENV{MPW}Startup Items:Perl";
$usp2 = "$ENV{MPW}UserStartup•Perl";

if (-e $usp1) {
	$UserStartup_Perl = $usp1;
} elsif (-e $usp2) {
	$UserStartup_Perl = $usp2;
} elsif (-d "$ENV{MPW}Startup Items:") {
	$UserStartup_Perl = $usp1;
} else {
	$UserStartup_Perl = $usp2;
}

if (-e "Config.MPW_Perl") {
	&DoInstall();
	exit 0;
} else {
	if (-e $UserStartup_Perl && MacPerl::Answer(<<END, "Extract", "Ignore")) {
You already have an MPW startup file for Perl file in place. 

Do you want me to extract configuration information from it?
END
		&GuessConfig();
	}
	&WriteConfig();
	exit 1;
}

sub DoInstall {
	do "Config.MPW_Perl" 
		or die <<END;
### ERROR - Configuration file seems to be corrupted, please delete it

Delete Config.MPW_Perl
END
	$BINFOLDER =~ s/\'/'∂''/g;
	$MACPERL =~ s/\'/'∂''/g;
	$P5LIB =~ s/\'/'∂''/g;
	$SHUCK =~ s/\'/'∂''/g;
	$CMD =~ s/\'/'∂''/g;
	print <<END;
# Install Tools and Scripts
#
# Please select the following commands and press <Enter>:

Duplicate -y :perl           ${BINFOLDER}perl        # Install Perl 
Duplicate -y :x2p:a2p        ${BINFOLDER}a2p		 # Install awk to Perl translator
Duplicate -y :x2p:s2p        ${BINFOLDER}s2perl      # Install sed to Perl translator
Duplicate -y :x2p:find2perl  ${BINFOLDER}find2perl   # Install find to Perl translator

# Set up MPW startup file for Perl file
#
# If you have your own startup file, merge the contents into it, otherwise
# just execute the following:

Begin
Echo '### MPW startup file for Perl, generated by Install.MPW_Perl'
Echo '#'
Echo '# This file contains definitions necessary to run the MacPerl MPW tool'
Echo '#'
Echo
Echo 'Set MACPERL  $MACPERL'
Echo '	Export MACPERL        # The path to the MacPerl libraries and documentation'
Echo 'Set PERL5LIB $P5LIB'
Echo '	Export PERL5LIB       # The path to the MacPerl libraries'
Echo 'Set Shuck $SHUCK'
Echo '	Export Shuck          # The path to the MacPerl documentation viewer'
Echo
Echo 'AddMenu Find "Perl Help" '∂∂∂n∂t∂''"\{Shuck\}"; SendAE -e miscmvis -do -t Shuck -----TEXT `catenate "\{active\}.§"`'∂'
Echo 'SetKey $CMD '∂∂∂n∂t∂''"\{Shuck\}"; SendAE -e miscmvis -do -t Shuck -----TEXT `catenate "\{active\}.§"`'∂'
Echo
Echo '################## ADD SITE SPECIFIC SETTINGS HERE ######################'
End > '$UserStartup_Perl'
END

$SITESTARTUP =~ s/^(\s*\n)+//;
$SITESTARTUP =~ s/\n(\s*\n)*$//;
if ($SITESTARTUP) {
	print "Begin\n";
	while ($SITESTARTUP =~ /(.*)\n?/g) {
		($line = $1) =~ s/\'/'∂''/g;
		print "Echo '$line'\n";
	}
	print "End >> $UserStartup_Perl\n\n";
}

### Installation (probably) successful, restart MPW to run Perl
END
}

sub GuessConfig {
	open(STARTUP, $UserStartup_Perl) or return;
	while (<STARTUP>) {
		if (/Set\s+(\w+)\s+(['"])(.*)\2/i) {
			($name,$value) = ($1, "$2$3$2");
			if ($name =~ /MACPERL/i) {
				$MACPERL = $value;
			} elsif ($name =~ /PERL5LIB/i || ($name =~ /PERLLIB/ && !defined $P5LIB)) {
				$P5LIB = $value;
			} elsif ($name =~ /SHUCK/i) {
				$SHUCK = $value;
			}
		} elsif (/SITE SPECIFIC/) {
			while (<STARTUP>) {
				$SITESTARTUP .= $_;
			}
			last;
		}
	}
}

sub WriteConfig {
	open(CONFIG, ">Config.MPW_Perl") or die <<END;
### ERROR - Failed to open configuration file “Config.MPW_Perl” for writing.
### 
### Frankly, I have no idea how to fix this. It's probably your fault, anyway.
END
	unless (defined $MACPERL) {
		chomp($MACPERL = `pwd`);
		$MACPERL =~ s/:[^:]+:?$/:/;
		$MACPERL = "'$MACPERL'";
	}
	$P5LIB    ||= '""';
	$SHUCK    ||= '"{MACPERL}Shuck"';
	$BINFOLDER||= (-d "$ENV{MPW}LocalTools") ? '"{MPW}LocalTools:"' : '"{MPW}Tools:"';
	$CMD      ||= '"Command-Option-p"';
	print CONFIG <<END;
### Config.MPW_Perl, generated by Install.MPW_Perl
#
# Edit the contents of this file appropriately, they will NOT be overwritten
# by further runs of Install.MPW_Perl. The “\a” characters are quoting devices,
# leave them alone.
#
# When you're done editing, close this window and run “Install.MPW_Perl” again.
#

# BINFOLDER - Where the Perl MPW tool gets installed. Must be included in \{Commands\}

\$BINFOLDER   = q\a$BINFOLDER\a;

# MACPERL - The root of all evil (or of MacPerl, to be more specific)

\$MACPERL     = q\a$MACPERL\a;

# PERL5LIB  - MacPerl library folder. Default should be OK.

\$P5LIB      = q\a$P5LIB\a;

# SHUCK     - MacPerl documentation viewer. Default should be OK.

\$SHUCK       = q\a$SHUCK\a;

# CMD       - Command key to start Shuck.

\$CMD         = q\a$CMD\a;

# SITESTARTUP - Stuff you have appended to UserStartup•Perl

\$SITESTARTUP = <<'END_SITESTARTUP';
$SITESTARTUP
END_SITESTARTUP

# That's all, folks

1;

END

print <<END
### SUCCESS - Configuration file written, run “Install.MPW_Perl” again to install.

Install.MPW_Perl
END
}
